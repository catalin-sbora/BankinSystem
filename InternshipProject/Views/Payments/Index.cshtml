@using InternshipProject.ViewModels.Payments;
@model InternshipProject.ViewModels.Payments.PaymentsViewModel
@{
    ViewData["Title"] = "Index";
}

@section Scripts{

    <partial name="_ValidationScriptsPartial" />
    <script src="~/js/partialViewLoader.js" type="text/javascript"></script>
    <script>
        function onPaymentOperationSuccess() {
            $("#payButton").hide();
        }

        function onPaymentOperationFailure() {
            $("#payButton").hide();
        }

        $(document).ready(function () {
            $('#newPaymentModal').on('show.bs.modal', function (event) {
                $("#payButton").show();
            });

            $('#newPaymentModal').on('hidden.bs.modal', function (event) {
                $("#newPaymentBody").html = "";
                loadServerPartialView("#newPaymentBody", "/Payments/New");
            });
        });

        function exportToExcel() {
            var htmls = "";
            var uri = 'data:application/vnd.ms-excel;base64,';
            var template = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--></head><body><table>{table}</table></body></html>';
            var base64 = function (s) {
                return window.btoa(unescape(encodeURIComponent(s)))
            };

            var format = function (s, c) {
                return s.replace(/{(\w+)}/g, function (m, p) {
                    return c[p];
                })
            };

            htmls = document.getElementById("exportTable").innerHTML;

            var ctx = {
                worksheet: 'Worksheet',
                table: htmls
            }


            var link = document.createElement("a");
            link.download = "export.xls";
            link.href = uri + base64(format(template, ctx));
            link.click();
        }

        function myFunction() {
            var rows = document.querySelector("#exportTable tbody").rows;
            for (var i = 0; i < rows.length; i++) {
                if (rows[i].cells[0].textContent < 0)
                    rows[i].style.display = "none";
            }
        }

        function Button1() {
            var rates = document.getElementsByName('account');
            var rate_value;
            var rows = document.querySelector("#exportTable tbody").rows;
            for (var i = 0; i < rates.length; i++) {
                if (rates[i].checked) {
                    rate_value = rates[i].value;
                    break;
                }
            }
            filterTable(rows, rate_value);           
        }
    </script>
}



<div class="d-flex justify-content-end">

    <div class="customer-details-label">
        Name:
    </div>
    <div class="customer-details-value">
        @Model.CustomerName
    </div>
</div>

<div class="d-flex justify-content-end">
    <div class="customer-details-label">
        Contact:
    </div>
    <div class="customer-details-value">
        @Model.CustomerPhoneNo
    </div>
</div>



<br />
<div class="table-responsive ">
    <table class="table table-striped" style="width: 500px;">
        <thead>
            <tr>
                <th style="color: white; background-color: #30254a;">
                    Select accounts
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var account in Model.BanksAccounts)
            {
                <tr>
                    <td>
                        <div class="form-check">
                            <input type="radio" id="yes" onclick="Button1()" name="account" value="@account.IBAN" checked="checked">
                            @*<input onclick="Button1()" name="account" checked="checked" class="form-check-input" type="checkbox" id="defaultCheck1">*@
                            <label class="form-check-label" for="defaultCheck1">
                                @account.IBAN
                            </label>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>



<div class="d-flex flex-column flex-md-row">
    <div class="d-flex flex-column flex-grow-1">
        <a href="#" class="btn btn-light light-button mr-0 mr-md-auto mb-4"><i class="fas fa-filter"></i> Filter </a>
    </div>

    <div class="d-flex flex-column ">
        <div class="input-group mb-3">
            <div class="input-group-prepend">
                <button class="btn btn-light light-button mt-4" data-toggle="modal" data-target="#newPaymentModal">
                    <i class="fas fa-money-bill"></i> New Payment
                </button>
            </div>
        </div>
    </div>
</div>



<br />
<form class="searchButtonPayments " asp-controller="Payments" asp-action="Index" method="get" style="margin: auto; width: 300px; margin-right: 0px;">
    <input id="searchString" type="text" placeholder="Search.." name="searchString">
    <button type="submit">
        <i class="fas fa-search"></i>
    </button>
</form>



<body onload="myFunction();Button1()">
    <div class="table-responsive table-shadow">
        <table id="exportTable" class="table table-striped table-light">
            <thead class="table-header">
                <tr style="color: white; background-color: #30254a;">
                    <th class="d-none d-md-table-cell" style="width: 150px;"> Amount </th>
                    <th style="width: 230px;"> Date </th>
                    <th> Internal Account </th>
                    <th> External Account </th>
                    <th style="width: 120px;"> Details </th>
                </tr>
            </thead>

            <tbody>
                @*foreach (var transaction in Model.Transactions)*@
                @foreach (var account in Model.BanksAccounts)
                    @foreach (var transaction in Model.Transactions)
                        @if (transaction.BankAccountId == account.Id)
                        {
                            <tr>
                                <td> @transaction.Amount.ToString("N") </td>
                                <td> @transaction.Time.ToString("dd/MM/yyyy") </td>
                                <td> @transaction.ExternalIBAN </td>
                                <td> @transaction.ExternalIBAN </td>
                                <td> @Html.ActionLink("Details", "Details", "Payments", new { Id = transaction.Id }, null) </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </body>



        <div class="d-flex flex-row-reverse bd-highlight">
            <div class="p-2 bd-highlight">
                <button class="btn btn-success" id="btnExport" onclick="exportToExcel()" style="background-color: #30254a;">
                    Export
                </button>
            </div>
        </div>



        <form id="newPaymentForm" method="post" asp-controller="Payments" asp-action="New"
              data
              -ajax="true"
              data-ajax-method="POST"
              data-ajax-mode="replace"
              data-ajax-update="#newPaymentBody">

            @Html.AntiForgeryToken()
            <div class="modal" id="newPaymentModal" tabindex="-1" role="dialog" aria-labelledby="newPaymentModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title font-weight-bold" id="newPaymentModalLabel">New Payment</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div id="newPaymentBody" class="modal-body">
                            @await Html.PartialAsync("_NewPaymentPartial", new NewPaymentViewModel { BanksAccount = Model.BanksAccounts })
                        </div>
                        <div id="payFailureMessage" class="text-danger ml-5"></div>

                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary shadow-button" data-dismiss="modal">Close</button>
                            <button id="payButton" type="submit" class="btn btn-danger shadow-button"> Pay </button>
                        </div>
                    </div>
                </div>
            </div>
        </form>
