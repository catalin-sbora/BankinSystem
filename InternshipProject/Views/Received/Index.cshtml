@model InternshipProject.ViewModels.Received.ReceivedListViewModel

@{
    ViewData["Title"] = "Index";
}

<div class="d-flex justify-content-end">

    <div class="customer-details-label">
        Name:
    </div>
    <div class="customer-details-value">
        @Model.CustomerName
    </div>
</div>

<div class="d-flex justify-content-end">

    <div class="customer-details-label">
        Contact:
    </div>
    <div class="customer-details-value">
        @Model.PhoneNo
    </div>
</div>

<h2>Received Transactions</h2>
<script>
    function Reset() {
        var source = document.getElementById('exportTable');
        var destination = document.getElementById('copyTable');
        var copy = source.cloneNode(true);
        copy.setAttribute('id', 'copyTable');
        destination.parentNode.replaceChild(copy, destination);
    }
</script>



<div class="table-responsive">
    <table class="table table-striped" style="width: 300px;">
        <thead>
            <tr>
                <th style="color: white; background-color: #30254a;">
                    Select account
                </th>
            </tr>
        </thead>
        <tbody>
            @{ int i = 0;}

            @foreach (var account in Model.BankAccounts)
            {


                <tr>
                    <td>

                        <input type="radio" id="yes" onclick="Button1()" name="account" value="@Model.BankAccounts.ElementAt(i).IBAN" checked="checked">

                        <label>@Model.BankAccounts.ElementAt(i).IBAN</label><br>
                        @{ i++;}

                    </td>

                </tr>
            }

        </tbody>
    </table>
</div>



<div class="d-flex flex-row-reverse bd-highlight">
    <div class="p-2 bd-highlight">
        @using (Html.BeginForm("AddReceived", "Received"))
        {
            <div class="d-flex flex-column">
                <button class="btn btn-light light-button" data-toggle="modal" data-target="#newPaymentModal">
                    <i class="fas fa-money-bill"></i> New Incoming
                </button>
            </div>
        }
    </div>
</div>
<br />
<div class="d-flex flex-column flex-md-row">
    <div class="d-flex flex-column flex-grow-1">
        <a asp-controller="Accounts" asp-action="TransactionsReport" asp-route-accountid="@Model.BankAccounts.ElementAt(0)" class="btn btn-light light-button mr-0 mr-md-auto mb-4"><i class="fas fa-file-excel"></i> Export</a>
    </div>
    <div class="d-flex flex-column">
        <div class="input-group mb-3">
            <div class="input-group-prepend">
                <span class="input-group-text"><i class="fas fa-filter"></i></span>
            </div>
            <input id="myInput" type="text" placeholder="Search" name="search">
        </div>
    </div>
</div>




<script type="text/javascript">
    function myFunction() {
        var rows = document.querySelector("#exportTable tbody").rows;
        for (var i = 0; i < rows.length; i++) {
            if (rows[i].cells[0].textContent < 0)
                rows[i].style.display = "none";
        }
    }
</script>

@*Script pentru butoanele de ales IBAN-ul...Nu reseateaza cand schimb butonul asa ca tabelul o sa se goleasca*@
<script type="text/javascript">
    function Button1() {

        var rates = document.getElementsByName('account');
        var rate_value;
        var rows = document.querySelector("#exportTable tbody").rows;
        for (var i = 0; i < rates.length; i++) {
            if (rates[i].checked) {
                rate_value = rates[i].value;
                break;
            }
        }
        for (var i = 0; i < rows.length; i++) {
            if (rows[i].cells[5].textContent != rate_value)
                rows[i].style.display = "none";
            else {
                $(rows[i]).removeAttr("style");
            }
        }
    }
</script>

<body onload="myFunction();Button1()">
    <table class="table table-striped" id="exportTable">
        <thead>
            <tr style="background-color:#30254a ;color: white">

                <th scope="col">Amount</th>
                <th scope="col">Date</th>
                <th scope="col">Status</th>
                <th scope="col">External Name</th>
                <th scope="col">External Account</th>
                <th scope="col">Details</th>
            </tr>
        </thead>

        <tbody>
            @foreach (var account in Model.BankAccounts)
                @foreach (var transaction in Model.Received)
                    @if (transaction.BankAccountId == account.Id)
                    {

            <tr>
                        <td>@transaction.Amount</td>
                        <td>@transaction.Time</td>
                        <td>@transaction.Status</td>
                        <td>@transaction.ExternalName</td>
                        <td>@transaction.ExternalIBAN</td>
                        <td>@account.IBAN</td>
                        <td>@Html.ActionLink("Details", "Details", "Payments", new { Id = transaction.Id }, null) </td>
            </tr>
                }
        </tbody>
    </table>
</body>
<button id="exportButton" class="btn btn-lg btn-success clearfix"><span class="fa fa-file-excel-o"></span> Export to Excel</button>
